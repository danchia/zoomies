// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ros/sensor_msgs/RegionOfInterest.proto

#include "ros/sensor_msgs/RegionOfInterest.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace ros {
namespace sensor_msgs {
constexpr RegionOfInterest::RegionOfInterest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : x_offset_(0u)
  , y_offset_(0u)
  , height_(0u)
  , width_(0u)
  , do_rectify_(false){}
struct RegionOfInterestDefaultTypeInternal {
  constexpr RegionOfInterestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RegionOfInterestDefaultTypeInternal() {}
  union {
    RegionOfInterest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RegionOfInterestDefaultTypeInternal _RegionOfInterest_default_instance_;
}  // namespace sensor_msgs
}  // namespace ros
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto = nullptr;

const uint32_t TableStruct_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ros::sensor_msgs::RegionOfInterest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ros::sensor_msgs::RegionOfInterest, x_offset_),
  PROTOBUF_FIELD_OFFSET(::ros::sensor_msgs::RegionOfInterest, y_offset_),
  PROTOBUF_FIELD_OFFSET(::ros::sensor_msgs::RegionOfInterest, height_),
  PROTOBUF_FIELD_OFFSET(::ros::sensor_msgs::RegionOfInterest, width_),
  PROTOBUF_FIELD_OFFSET(::ros::sensor_msgs::RegionOfInterest, do_rectify_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ros::sensor_msgs::RegionOfInterest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ros::sensor_msgs::_RegionOfInterest_default_instance_),
};

const char descriptor_table_protodef_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&ros/sensor_msgs/RegionOfInterest.proto"
  "\022\017ros.sensor_msgs\"i\n\020RegionOfInterest\022\020\n"
  "\010x_offset\030\001 \001(\r\022\020\n\010y_offset\030\002 \001(\r\022\016\n\006hei"
  "ght\030\003 \001(\r\022\r\n\005width\030\004 \001(\r\022\022\n\ndo_rectify\030\005"
  " \001(\010b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto = {
  false, false, 172, descriptor_table_protodef_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto, "ros/sensor_msgs/RegionOfInterest.proto", 
  &descriptor_table_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto::offsets,
  file_level_metadata_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto, file_level_enum_descriptors_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto, file_level_service_descriptors_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto_getter() {
  return &descriptor_table_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto(&descriptor_table_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto);
namespace ros {
namespace sensor_msgs {

// ===================================================================

class RegionOfInterest::_Internal {
 public:
};

RegionOfInterest::RegionOfInterest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ros.sensor_msgs.RegionOfInterest)
}
RegionOfInterest::RegionOfInterest(const RegionOfInterest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_offset_, &from.x_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&do_rectify_) -
    reinterpret_cast<char*>(&x_offset_)) + sizeof(do_rectify_));
  // @@protoc_insertion_point(copy_constructor:ros.sensor_msgs.RegionOfInterest)
}

inline void RegionOfInterest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&x_offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&do_rectify_) -
    reinterpret_cast<char*>(&x_offset_)) + sizeof(do_rectify_));
}

RegionOfInterest::~RegionOfInterest() {
  // @@protoc_insertion_point(destructor:ros.sensor_msgs.RegionOfInterest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RegionOfInterest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RegionOfInterest::ArenaDtor(void* object) {
  RegionOfInterest* _this = reinterpret_cast< RegionOfInterest* >(object);
  (void)_this;
}
void RegionOfInterest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegionOfInterest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RegionOfInterest::Clear() {
// @@protoc_insertion_point(message_clear_start:ros.sensor_msgs.RegionOfInterest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&do_rectify_) -
      reinterpret_cast<char*>(&x_offset_)) + sizeof(do_rectify_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegionOfInterest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 x_offset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          x_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 y_offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          y_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 width = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool do_rectify = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          do_rectify_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegionOfInterest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ros.sensor_msgs.RegionOfInterest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x_offset = 1;
  if (this->_internal_x_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_x_offset(), target);
  }

  // uint32 y_offset = 2;
  if (this->_internal_y_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_y_offset(), target);
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_height(), target);
  }

  // uint32 width = 4;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_width(), target);
  }

  // bool do_rectify = 5;
  if (this->_internal_do_rectify() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_do_rectify(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ros.sensor_msgs.RegionOfInterest)
  return target;
}

size_t RegionOfInterest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ros.sensor_msgs.RegionOfInterest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 x_offset = 1;
  if (this->_internal_x_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_x_offset());
  }

  // uint32 y_offset = 2;
  if (this->_internal_y_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_y_offset());
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_height());
  }

  // uint32 width = 4;
  if (this->_internal_width() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_width());
  }

  // bool do_rectify = 5;
  if (this->_internal_do_rectify() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegionOfInterest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RegionOfInterest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegionOfInterest::GetClassData() const { return &_class_data_; }

void RegionOfInterest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RegionOfInterest *>(to)->MergeFrom(
      static_cast<const RegionOfInterest &>(from));
}


void RegionOfInterest::MergeFrom(const RegionOfInterest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ros.sensor_msgs.RegionOfInterest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x_offset() != 0) {
    _internal_set_x_offset(from._internal_x_offset());
  }
  if (from._internal_y_offset() != 0) {
    _internal_set_y_offset(from._internal_y_offset());
  }
  if (from._internal_height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (from._internal_width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from._internal_do_rectify() != 0) {
    _internal_set_do_rectify(from._internal_do_rectify());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegionOfInterest::CopyFrom(const RegionOfInterest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ros.sensor_msgs.RegionOfInterest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionOfInterest::IsInitialized() const {
  return true;
}

void RegionOfInterest::InternalSwap(RegionOfInterest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegionOfInterest, do_rectify_)
      + sizeof(RegionOfInterest::do_rectify_)
      - PROTOBUF_FIELD_OFFSET(RegionOfInterest, x_offset_)>(
          reinterpret_cast<char*>(&x_offset_),
          reinterpret_cast<char*>(&other->x_offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegionOfInterest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto_getter, &descriptor_table_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto_once,
      file_level_metadata_ros_2fsensor_5fmsgs_2fRegionOfInterest_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace sensor_msgs
}  // namespace ros
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ros::sensor_msgs::RegionOfInterest* Arena::CreateMaybeMessage< ::ros::sensor_msgs::RegionOfInterest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ros::sensor_msgs::RegionOfInterest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
